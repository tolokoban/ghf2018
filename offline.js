function precache(){return caches.open(CACHE).then(function(e){return e.addAll(["./index.html","./manifest.json","./js/@index.js","./css/@index.css","./css/main/background.jpg","./icon-128.png","./icon-512.png"])})}function fromCache(e){return caches.open(CACHE).then(function(n){return n.match(e).then(function(e){return e||Promise.reject("no-match")})})}function update(e){return caches.open(CACHE).then(function(n){return fetch(e).then(function(t){return n.put(e,t)})})}var window=self;window.require=function(){var e={},n={},t="function"==typeof window.require?window.require:null,r=function(o,i){if("node://"==o.substr(0,7)){if(!t)throw Error("[require] NodeJS is not available to load module `"+o+"`!");return t(o.substr(7))}if("function"==typeof i)return void(n[o]=i);var a;if(i=n[o],"undefined"==typeof i){var s=new Error("Required module is missing: "+o);throw console.error(s.stack),s}if(a=e[o],"undefined"==typeof a){a={exports:{}};var u=a.exports;i(r,a,u),e[o]=a.exports,a=a.exports}return a};return r}(),require("$",function(e,n,t){t.config={name:'"ghf2018"',description:'"Geneva Health Forum 2018 Progressive App."',author:'"tolokoban"',version:'"0.0.2"',major:"0",minor:"0",revision:"2",date:"2017-02-24T11:35:37.000Z",consts:{}};var r=null;t.lang=function(e){return void 0===e&&(window.localStorage&&(e=window.localStorage.getItem("Language")),e||(e=window.navigator.language,e||(e=window.navigator.browserLanguage,e||(e="fr"))),e=e.substr(0,2).toLowerCase()),r=e,window.localStorage&&window.localStorage.setItem("Language",e),e},t.intl=function(e,n){var r,o,i,a,s,u,c,l=e[t.lang()],f=n[0];for(c in e)break;if(!c)return f;if(!l&&(l=e[c],!l))return f;if(r=l[f],r||(l=e[c],r=l[f]),!r)return f;if(n.length>1){for(o="",s=0,i=0;i<r.length;i++)a=r.charAt(i),"$"===a?(o+=r.substring(s,i),i++,u=r.charCodeAt(i)-48,o+=u<0||u>=n.length?"$"+r.charAt(i):n[u],s=i+1):"\\"===a&&(o+=r.substring(s,i),i++,o+=r.charAt(i),s=i+1);o+=r.substr(s),r=o}return r}});var CACHE="cache-and-update";self.addEventListener("install",function(e){console.log("[SW] install."),e.waitUntil(precache())}),self.addEventListener("activate",function(e){console.log("[SW] activate."),e.waitUntil(precache())}),self.addEventListener("fetch",function(e){console.log("[SW] fetch. ",e.request.url),e.respondWith(fromCache(e.request)),e.waitUntil(update(e.request))}),self.addEventListener("message",function(e){console.log("[SW] message.")}),self.addEventListener("sync",function(e){console.log("[SW] sync.")}),self.addEventListener("push",function(e){console.log("[SW] push.")});
//# sourceMappingURL=mod/offline.wrk.map